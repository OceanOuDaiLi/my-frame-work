//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.test
{ 

/// <summary>
/// 圆
/// </summary>
public sealed partial class Circle :  Shape 
{
    public Circle(JSONNode _json)  : base(_json) 
    {
        { if(!_json["radius"].IsNumber) { throw new SerializationException(); }  Radius = _json["radius"]; }
        PostInit();
    }

    public Circle(float radius )  : base() 
    {
        this.Radius = radius;
        PostInit();
    }

    public static Circle DeserializeCircle(JSONNode _json)
    {
        return new test.Circle(_json);
    }

    /// <summary>
    /// 半径
    /// </summary>
    public float Radius { get; private set; }

    public const int __ID__ = 2131829196;
    public override int GetTypeId() => __ID__;

    public override void Resolve(Dictionary<string, object> _tables)
    {
        base.Resolve(_tables);
        PostResolve();
    }

    public override void TranslateText(System.Func<string, string, string> translator)
    {
        base.TranslateText(translator);
    }

    public override string ToString()
    {
        return "{ "
        + "Radius:" + Radius + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
