//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;
using SimpleJSON;



namespace cfg.test
{ 

public sealed partial class SepVector :  Bright.Config.BeanBase 
{
    public SepVector(JSONNode _json) 
    {
        { if(!_json["x"].IsNumber) { throw new SerializationException(); }  X = _json["x"]; }
        { if(!_json["y"].IsNumber) { throw new SerializationException(); }  Y = _json["y"]; }
        { if(!_json["z"].IsNumber) { throw new SerializationException(); }  Z = _json["z"]; }
        PostInit();
    }

    public SepVector(int x, int y, int z ) 
    {
        this.X = x;
        this.Y = y;
        this.Z = z;
        PostInit();
    }

    public static SepVector DeserializeSepVector(JSONNode _json)
    {
        return new test.SepVector(_json);
    }

    public int X { get; private set; }
    public int Y { get; private set; }
    public int Z { get; private set; }

    public const int __ID__ = 252769477;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "X:" + X + ","
        + "Y:" + Y + ","
        + "Z:" + Z + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}
}
